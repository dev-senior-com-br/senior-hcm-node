/**
 * recruitment
 * Serviço do Gestão de Recrutamento e Seleção.
 *
 * OpenAPI spec version: 15.10.3
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { RecruitmentVacancySummaryRequester } from './recruitmentVacancySummaryRequester';
import { VacancyAdmissionSituation } from './vacancyAdmissionSituation';
import { VacancyCardReason } from './vacancyCardReason';
import { VacancyCardSituation } from './vacancyCardSituation';
import { VacancyChat } from './vacancyChat';
import { VacancyCompany } from './vacancyCompany';
import { VacancyContractType } from './vacancyContractType';
import { VacancyCostCenter } from './vacancyCostCenter';
import { VacancyDepartment } from './vacancyDepartment';
import { VacancyEmploymentContract } from './vacancyEmploymentContract';
import { VacancyIntegrationStatus } from './vacancyIntegrationStatus';
import { VacancyJobPosition } from './vacancyJobPosition';
import { VacancyPersonalityModel } from './vacancyPersonalityModel';
import { VacancyReplacedEmployee } from './vacancyReplacedEmployee';
import { VacancyRequisition } from './vacancyRequisition';
import { VacancyResponsible } from './vacancyResponsible';
import { VacancySequenceStaffrequisitionVacancy } from './vacancySequenceStaffrequisitionVacancy';
import { VacancyWorkShift } from './vacancyWorkShift';
import { VacancyWorkstationGroup } from './vacancyWorkstationGroup';


/**
 * Vaga de emprego.
 */
export interface Vacancy { 
    reason: VacancyCardReason;
    /**
     * Comentário de conclusão
     */
    finalizationComment?: string;
    workstationGroup?: VacancyWorkstationGroup;
    requisition?: VacancyRequisition;
    contractType?: VacancyContractType;
    /**
     * Data inicial da publicação da vaga para candidatos externos.
     */
    externalStartDate?: string;
    /**
     * Identificador do departamento
     */
    departmentId?: string;
    /**
     * Data de criação da vaga.
     */
    createdAt?: Date;
    admissionSituation?: VacancyAdmissionSituation;
    /**
     * Identificador único da entidade.
     */
    id?: string;
    /**
     * URL com o link do arquivo que contém o texto da publicação no BlobService.
     */
    locationURI?: string;
    requester?: RecruitmentVacancySummaryRequester;
    workShift?: VacancyWorkShift;
    /**
     * Id do anexo de finalização da vaga
     */
    finalizationAttachmentId?: string;
    /**
     * Data prevista de admissão.
     */
    admissionDate?: string;
    /**
     * Identificador do posto de trabalho.
     */
    workstationGroupId?: string;
    /**
     * ID do solicitante da vaga.
     */
    requesterId?: string;
    costCenter?: VacancyCostCenter;
    /**
     * Quantidade de horas que a vaga ficou pendente com o solicitante.
     */
    pendencyHours?: number;
    /**
     * Versão do identificador do arquivo com o texto da publicação no BlobService.
     */
    version?: string;
    jobPosition?: VacancyJobPosition;
    /**
     * Identificador da empresa
     */
    companyId?: string;
    /**
     * Fim da faixa salarial.
     */
    endSalaryRange?: string;
    /**
     * Identificador do cargo da vaga.
     */
    jobPositionId?: string;
    sequenceStaffrequisitionVacancy?: VacancySequenceStaffrequisitionVacancy;
    replacedEmployee?: VacancyReplacedEmployee;
    integrationStatus?: VacancyIntegrationStatus;
    /**
     * Identificador do turno de trabalho
     */
    workShiftId?: string;
    /**
     * Identificador do arquivo com o texto da publicação no BlobService.
     */
    fileId?: string;
    /**
     * Identificador do questionário
     */
    questionnaire?: string;
    personalityModel?: VacancyPersonalityModel;
    employmentContract?: VacancyEmploymentContract;
    /**
     * ID do chat da vaga.
     */
    chatId?: string;
    /**
     * Indica se a vaga deve ser publicada para candidatos externos.
     */
    externalPublish?: boolean;
    /**
     * Descrição da vaga.
     */
    description: string;
    /**
     * Título da vaga.
     */
    title: string;
    /**
     * Id da requisição da vaga.
     */
    requisitionId?: string;
    /**
     * Indica se a vaga deve estar em destaque.
     */
    highlight?: boolean;
    /**
     * Data final da publicação da vaga para candidatos internos.
     */
    internalEndDate?: string;
    /**
     * Identificador do centro de custo
     */
    costCenterId?: string;
    /**
     * Indica se a vaga possui alguma pendência registrada.
     */
    hasPendencyRegistered?: boolean;
    /**
     * Indica se a vaga deve ser publicada para candidatos internos.
     */
    internalPublish?: boolean;
    responsible?: VacancyResponsible;
    company?: VacancyCompany;
    /**
     * Justificativa para a abertura da vaga.
     */
    justification: string;
    department?: VacancyDepartment;
    situation?: VacancyCardSituation;
    /**
     * Início da faixa salarial.
     */
    startSalaryRange?: string;
    /**
     * Data inicial da publicação da vaga para candidatos internos.
     */
    internalStartDate?: string;
    /**
     * Data final da publicação da vaga para candidatos externos.
     */
    externalEndDate?: string;
    /**
     * ID do colaborador que será substituido (Se for o caso).
     */
    replacedEmployeeId?: string;
    /**
     * Indica que a vaga está pendente com o solicitante.
     */
    pendingWithRequester?: boolean;
    /**
     * Indica se a vaga já possui candidatos.
     */
    hasCandidates?: boolean;
    /**
     * Identificador do responsável por armazenar uma sequência única da RP na vaga.
     */
    sequenceStaffrequisitionVacancyId?: string;
    /**
     * Data e hora de conclusão da vaga
     */
    finalizedAt?: Date;
    chat?: VacancyChat;
    /**
     * Progresso da vaga.
     */
    progress?: number;
    /**
     * Local da vaga.
     */
    location?: string;
}
