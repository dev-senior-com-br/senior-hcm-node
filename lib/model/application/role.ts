/**
 * Aplicação
 * Serviço do backend da aplicação do Ronda senior X
 *
 * OpenAPI spec version: 4.7.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { PersonRole } from './personRole';
import { RoleAccessCreditRangeList } from './roleAccessCreditRangeList';
import { RoleAccessDevice } from './roleAccessDevice';
import { RoleAccessPhysicalLocation } from './roleAccessPhysicalLocation';
import { RoleAuthorizePhysicalLocation } from './roleAuthorizePhysicalLocation';
import { RoleAuthorizeRole } from './roleAuthorizeRole';
import { ValidationSetup } from './validationSetup';
import { WorkSchedule } from './workSchedule';


export interface Role { 
    /**
     * Tempo em minutos para tolerância da validação de interjornada
     */
    inBetweenWorkdaysToleranceInMinutes?: number;
    /**
     * Relação Pessoa Papel
     */
    personRoles?: Array<PersonRole>;
    workSchedule?: WorkSchedule;
    timeSlotValidation?: ValidationSetup;
    /**
     * Relação dos Papéis Autorizadores
     */
    authorizerRoles?: Array<RoleAuthorizeRole>;
    /**
     * Tempo em horas da validação de interjornada
     */
    inBetweenWorkdaysTimeInHours?: number;
    /**
     * Integrado com Ronda Senior
     */
    integrated?: boolean;
    /**
     * Url de Validação Customizada
     */
    customValidationUrl?: string;
    roleAuthorizerValidation?: ValidationSetup;
    /**
     * Papel que Recebe Visita
     */
    receiveVisit?: boolean;
    /**
     * Relação de Papel que Autoriza Local Físico
     */
    roleAuthorizePhysicalLocations?: Array<RoleAuthorizePhysicalLocation>;
    /**
     * Relação dos Papéis Autorizados
     */
    authorizedRoles?: Array<RoleAuthorizeRole>;
    /**
     * Relação Papel Lista de Faixas de Crédito de Acesso
     */
    roleAccessCreditRangeLists?: Array<RoleAccessCreditRangeList>;
    customValidation?: ValidationSetup;
    /**
     * ID
     */
    id?: number;
    levelValidation?: ValidationSetup;
    inBetweenWorkdaysValidation?: ValidationSetup;
    workScheduleValidation?: ValidationSetup;
    /**
     * Relação de Papel que Acessa o Local Físico
     */
    roleAccessPhysicalLocations?: Array<RoleAccessPhysicalLocation>;
    antiPassbackValidation?: ValidationSetup;
    /**
     * Relação de Papel que Acessa o Dispositivo
     */
    roleAccessDevices?: Array<RoleAccessDevice>;
    /**
     * Papel Utilizado pelo Provisório
     */
    usedByProvisory?: boolean;
    creditAccessValidation?: ValidationSetup;
    physicalLocationAuthorizerValidation?: ValidationSetup;
    physicalLocationValidation?: ValidationSetup;
    /**
     * Nome
     */
    name?: string;
    stockingValidation?: ValidationSetup;
    parkingSpaceValidation?: ValidationSetup;
}
